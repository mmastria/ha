#! /bin/sh
### BEGIN INIT INFO
# Provides:          aagsolo
# Required-Start:    
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       starts the aagsolo service, copying first its contents
#		     to a RAMDISK folder
### END INIT INFO

# Author: Jaime 
#

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="AAGCloudWatcher communication"
NAME=aagsolo
DAEMON=/home/aagsolo/solod
DAEMON_ARGS="run"
# PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME


#
# Function that starts the daemon/service
#
do_start()
{
	printf "Starting at..." >> /tmp/sololog
	date >> /tmp/sololog
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	# just in case...
	# TZ='Europe/Madrid'; export TZ	# probando...
	[ -w /home/aagsolo/exitnow ] && rm /home/aagsolo/exitnow
	# copy first to ramdisk
	cp -r --preserve /home/aagsolo-orig/* /home/aagsolo
	chmod 0555 /home/aagsolo/solod
	/home/aagsolo/solod run > /tmp/solod.log 2>&1
	#/home/aagsolo/solod run > /dev/null 2>&1
	return 0
}

#
# Function that stops the daemon/service
#
do_stop()
{
	printf  "Stopping at..." >> /tmp/sololog
	date >> /tmp/sololog
	echo "." >> /tmp/sololog
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	# touch /home/aagsolo/exitnow
	pkill solod
	return 0
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	return 0
}

case "$1" in
  start)
	do_start ;;
  stop)
	do_stop ;;
  status)
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
	;;
  #reload|force-reload)
	#
	# If do_reload() is not implemented then leave this commented out
	# and leave 'force-reload' as an alias for 'restart'.
	#
	#log_daemon_msg "Reloading $DESC" "$NAME"
	#do_reload
	#log_end_msg $?
	#;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac
